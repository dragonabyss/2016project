function mhDemoMOG()
% Demo of Metropolis-Hastings algorithm for sampling from
% a mixture of two 1D Gaussians using a Gaussian proposal.
% Based on code originally written by Nando de Freitas.
weights = [0.3 0.7]; %权重
mus = [0 10];        %正态分布的平均数
sigmas = [2 2];      %正太分布的标准差

Nsamples = 5000;     %随机序列的长度
x = zeros(Nsamples,1)%保存序列的数据
sigma_prop = 10;     %Gaussion proposal 的标准差

targetArgs = {weights,mus,sigma};
proposalArgs = {sigma_prop};

seed = 1;randn('state',seed);randn('state',seed);
xinit = 20*rand(1,1); %初始化状态
[x,naccept] = MH(@target,@proposal,xint,Nsamples,targetArgs,proposalArgs);

% plot the histogram of samples
N_bins = 50;
Ns = [100 500 1000 Nsamples];
figure;
for i = 1:4
    subplot(2,2,i)
    x_t = linspace(-10,20,1000);
    y_t = feval(@target,x_t,weights,mus,sigmas);
    [b,a] = hist
end

end

function p = mogProb(x,mixWeights,mu,sigma)
%p(n) = sum_k w(k) N(x(n)|mu(k), sigma(k))
K = length(mixWeights);
N = length(x);
p = zeros(N,1);
for k = 1:K
    p = p + mixWeights(k)*mvnpdf(x(:),mu(k),sigma(k));
end
end

function p = target(x,mixWeights,mus,sigmas)
p = log(mogProb(x,mixWeights,mus,sigmas));
end

function xp = proposal(x,sigma_prop)
xp = x + sigma_prop * randn(1,1);
end

function p = proposalProb(x,xprime,sigma_prop)
p = normpdf(x,xprime,sigma_prop);
end
